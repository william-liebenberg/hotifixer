name: Hotfix (PP to Prod)

on:
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:
  hotfix-validate:
    runs-on: ubuntu-latest
    steps:
      - run: |
          $branchName = $env:GITHUB_REF_NAME
          Write-host "Your branch is $($branchName)..."
          if(-not($branchName.StartsWith('hotfix/','CurrentCultureIgnoreCase'))) {
              Write-Host "Cannot start the Hotfix process - your branch must start with 'hotfix/'"
              exit 1
          }
          Write-Host "Cannot start the Hotfix process - your branch must start with 'hotfix/'"

  build:
    uses: ./.github/workflows/publish-code.yml
    secrets: inherit
    needs: hotfix-validate

  unit-test:
    uses: ./.github/workflows/unit-test.yml
    secrets: inherit
    needs: hotfix-validate

  pp-hotfix-approval-gate:
    runs-on: ubuntu-latest
    environment: "pp-hotfix-approval"
    steps:
      - name: approved
        env: 
          ENV_NAME: pp
        run: write-host "Approve for $($env.ENV_NAME)"
    needs:
      - build
      - unit-test
        
  pp-deploy:
    uses: ./.github/workflows/deploy-environment.yml
    with:
      environment: pp
      use_approval_gate: false
    secrets: inherit
    needs:
      - pp-hotfix-approval-gate

  prod-hotfix-approval-gate:
    runs-on: ubuntu-latest
    environment: "prod-hotfix-approval"
    steps:
      - name: approved
        env: 
          ENV_NAME: prod
        run: write-host "Approve for $($env.ENV_NAME)"
    needs:
      - pp-deploy
  
  prod-deploy:
    uses: ./.github/workflows/deploy-environment.yml
    with:
      environment: prod
      use_approval_gate: false
    secrets: inherit
    needs:
      - prod-hotfix-approval-gate

  pr-to-main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: create pull request
        run: |
          gh pr create -B $env:BASE_BRANCH -H $env:CURRENT_BRANCH `
              --body-file ./.github/hotfix_pull_request_template.md `
              --title "Hotfix PR $($env:CURRENT_BRANCH) into $($env:BASE_BRANCH)" `
              --label "hotfix"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH: 'main'
          CURRENT_BRANCH: ${{ github.ref_name }}
    needs: 
      - prod-deploy
